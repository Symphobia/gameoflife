{"version":3,"sources":["index.js"],"names":["Box","selectBox","props","row","col","className","this","boxClass","id","boxId","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","gridFull","push","key","style","Buttons","handleSelect","evt","gridSize","playButton","pauseButton","clear","slow","fast","seed","title","onSelect","Item","eventKey","Main","gridCopy","arrayClone","state","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","speed","grid","Array","fill","map","gridFul","generation","size","g","g2","count","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"oQAKMA,E,2MACFC,UAAY,WACR,EAAKC,MAAMD,UAAU,EAAKC,MAAMC,IAAK,EAAKD,MAAME,M,wEAIhD,OACI,yBACAC,UAAWC,KAAKJ,MAAMK,SACtBC,GAAIF,KAAKJ,MAAMO,MACfC,QAASJ,KAAKL,gB,GAVRU,IAAMC,WAelBC,E,iLAKE,IAHA,IAAMC,EAA2B,GAAlBR,KAAKJ,MAAMa,KACtBC,EAAU,GACVT,EAAW,GACPU,EAAI,EAAGA,EAAIX,KAAKJ,MAAMgB,KAAMD,IAChC,IAAI,IAAIE,EAAI,EAAGA,EAAIb,KAAKJ,MAAMa,KAAMI,IAAK,CACrC,IAAIV,EAAQQ,EAAI,IAAME,EACtBZ,EAAWD,KAAKJ,MAAMkB,SAASH,GAAGE,GAAK,SAAW,UAClDH,EAAQK,KACJ,kBAACrB,EAAD,CACIO,SAAYA,EACZe,IAAOb,EACPA,MAASA,EACTN,IAAOc,EACPb,IAAOe,EACPlB,UAAaK,KAAKJ,MAAMD,aAMxC,OACI,yBAAKI,UAAY,OAAOkB,MAAS,CAACT,MAAOA,IACpCE,O,GAxBEL,IAAMC,WA8BnBY,E,2MAEFC,aAAe,SAACC,GACZ,EAAKxB,MAAMyB,SAASD,I,wEAIpB,OACI,yBAAKrB,UAAU,UACX,kBAAC,IAAD,KACI,4BAAQK,QAASJ,KAAKJ,MAAM0B,YAA5B,QACA,4BAAQlB,QAASJ,KAAKJ,MAAM2B,aAA5B,UACA,4BAAQnB,QAASJ,KAAKJ,MAAM4B,OAA5B,WACA,4BAAQpB,QAASJ,KAAKJ,MAAM6B,MAA5B,iBACA,4BAAQrB,QAASJ,KAAKJ,MAAM8B,MAA5B,uBACA,4BAAQtB,QAASJ,KAAKJ,MAAM+B,MAA5B,SACA,kBAAC,IAAD,CAAgBC,MAAM,gBAAgB1B,GAAG,YAAY2B,SAAU7B,KAAKmB,cAChE,kBAAC,IAASW,KAAV,CAAeC,SAAS,KAAxB,SACA,kBAAC,IAASD,KAAV,CAAeC,SAAS,KAAxB,gB,GAlBF1B,IAAMC,WA0BtB0B,E,YACF,aAAe,IAAD,8BACV,+CAUJrC,UAAY,SAACE,EAAKC,GACd,IAAImC,EAAWC,EAAW,EAAKC,MAAMrB,UACrCmB,EAASpC,GAAKC,IAAQmC,EAASpC,GAAKC,GACpC,EAAKsC,SAAS,CACVtB,SAAUmB,KAfJ,EAmBdN,KAAO,WAEH,IADA,IAAIM,EAAWC,EAAW,EAAKC,MAAMrB,UAC7BH,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IAC1B,IAAI,IAAIE,EAAI,EAAGA,EAAI,EAAKJ,KAAMI,IACW,IAAlCwB,KAAKC,MAAsB,EAAhBD,KAAKE,YACfN,EAAStB,GAAGE,IAAK,GAI7B,EAAKuB,SAAS,CACVtB,SAAUmB,KA7BJ,EAiCdX,WAAa,WACTkB,cAAc,EAAKC,YACnB,EAAKA,WAAaC,YAAY,EAAKC,KAAM,EAAKC,QAnCpC,EAsCdrB,YAAc,WACViB,cAAc,EAAKC,aAvCT,EA0CdhB,KAAO,WACH,EAAKmB,MAAQ,IACb,EAAKtB,cA5CK,EA+CdI,KAAO,WACH,EAAKkB,MAAQ,IACb,EAAKtB,cAjDK,EAoDdE,MAAQ,WACJ,IAAIqB,EAAOC,MAAM,EAAKlC,MAAMmC,OAAOC,IAAI,kBAAMF,MAAM,EAAKrC,MAAMsC,MAAK,KACnE,EAAKX,SAAS,CACVa,QAASJ,EACTK,WAAY,KAxDN,EA4Dd7B,SAAW,SAAC8B,GACR,OAAOA,GACH,IAAK,IACD,EAAK1C,KAAO,GACZ,EAAKG,KAAO,GAChB,MACA,IAAK,IACD,EAAKH,KAAO,GACZ,EAAKG,KAAO,GAChB,MACA,QACI,EAAKH,KAAO,GACZ,EAAKG,KAAO,GAEpB,EAAKY,SA1EK,EA6EdmB,KAAO,WAIT,IAHA,IAAIS,EAAI,EAAKjB,MAAMrB,SACfuC,EAAKnB,EAAW,EAAKC,MAAMrB,UAEtBH,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IAC7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKJ,KAAMI,IAAK,CAClC,IAAIyC,EAAQ,EACR3C,EAAI,GAAOyC,EAAEzC,EAAI,GAAGE,IAAIyC,IACxB3C,EAAI,GAAKE,EAAI,GAAOuC,EAAEzC,EAAI,GAAGE,EAAI,IAAIyC,IACrC3C,EAAI,GAAKE,EAAI,EAAKJ,KAAO,GAAO2C,EAAEzC,EAAI,GAAGE,EAAI,IAAIyC,IACjDzC,EAAI,EAAKJ,KAAO,GAAO2C,EAAEzC,GAAGE,EAAI,IAAIyC,IACpCzC,EAAI,GAAOuC,EAAEzC,GAAGE,EAAI,IAAIyC,IACxB3C,EAAI,EAAKC,KAAO,GAAOwC,EAAEzC,EAAI,GAAGE,IAAIyC,IACpC3C,EAAI,EAAKC,KAAO,GAAKC,EAAI,GAAOuC,EAAEzC,EAAI,GAAGE,EAAI,IAAIyC,IACjD3C,EAAI,EAAKC,KAAO,GAAKC,EAAI,EAAKJ,KAAO,GAAO2C,EAAEzC,EAAI,GAAGE,EAAI,IAAIyC,IAC7DF,EAAEzC,GAAGE,KAAOyC,EAAQ,GAAKA,EAAQ,KAAID,EAAG1C,GAAGE,IAAK,GAC/CuC,EAAEzC,GAAGE,IAAgB,IAAVyC,IAAaD,EAAG1C,GAAGE,IAAK,GAG5C,EAAKuB,SAAS,CACZtB,SAAUuC,EACVH,WAAY,EAAKf,MAAMe,WAAa,KAhGhC,EAAKN,MAAQ,IACb,EAAKhC,KAAO,GACZ,EAAKH,KAAO,GACZ,EAAK0B,MAAQ,CACTe,WAAY,EACZpC,SAAUgC,MAAM,EAAKlC,MAAMmC,OAAOC,IAAI,kBAAMF,MAAM,EAAKrC,MAAMsC,MAAK,MAP5D,E,iFAwGV/C,KAAK2B,OACL3B,KAAKsB,e,+BAIL,OACI,6BACI,2CACA,kBAACJ,EAAD,CACII,WAActB,KAAKsB,WACnBC,YAAevB,KAAKuB,YACpBE,KAAQzB,KAAKyB,KACbC,KAAQ1B,KAAK0B,KACbF,MAASxB,KAAKwB,MACdG,KAAQ3B,KAAK2B,KACbN,SAAYrB,KAAKqB,WAErB,kBAACd,EAAD,CACIO,SAAYd,KAAKmC,MAAMrB,SACvBF,KAAQZ,KAAKY,KACbH,KAAQT,KAAKS,KACbd,UAAaK,KAAKL,YAEtB,sCAAYK,KAAKmC,MAAMe,iB,GAhIpB7C,IAAMC,WAsIzB,SAAS4B,EAAWqB,GAChB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrCI,IAASC,OAAO,kBAAC5B,EAAD,MAAU6B,SAASC,eAAe,U","file":"static/js/main.9fc324b3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {ButtonToolbar, DropdownButton, Dropdown} from \"react-bootstrap\"\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col)\n    }\n\n    render() {\n        return(\n            <div \n            className={this.props.boxClass}\n            id={this.props.boxId}\n            onClick={this.selectBox}></div>\n        )\n    }\n}\n\nclass Grid extends React.Component {\n    render() {\n        const width = (this.props.cols * 14)\n        var rowsArr = []\n        var boxClass = \"\"\n        for(var i = 0; i < this.props.rows; i++) {\n            for(var j = 0; j < this.props.cols; j++) {\n                let boxId = i + \"_\" + j\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\"\n                rowsArr.push(\n                    <Box \n                        boxClass = {boxClass}\n                        key = {boxId}\n                        boxId = {boxId}\n                        row = {i}\n                        col = {j}\n                        selectBox = {this.props.selectBox}\n                    />\n                )\n            }\n        }\n\n        return(\n            <div className = \"grid\" style = {{width: width}}>\n                {rowsArr}\n            </div>\n        )\n    }\n}\n\nclass Buttons extends React.Component {\n\n    handleSelect = (evt) => {\n        this.props.gridSize(evt)\n    }\n\n    render() {\n        return(\n            <div className=\"center\">\n                <ButtonToolbar>\n                    <button onClick={this.props.playButton}>Oyna</button>\n                    <button onClick={this.props.pauseButton}>Durdur</button>\n                    <button onClick={this.props.clear}>Temizle</button>\n                    <button onClick={this.props.slow}>Yavaşlat</button>\n                    <button onClick={this.props.fast}>Hızlandır</button>\n                    <button onClick={this.props.seed}>Yemle</button>\n                    <DropdownButton title=\"Izgara Boyutu\" id=\"size-menu\" onSelect={this.handleSelect}>\n                        <Dropdown.Item eventKey=\"1\">20x10</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">50x30</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonToolbar>\n            </div>\n        )\n    }\n}\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n        this.speed = 100\n        this.rows = 30\n        this.cols = 50\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n        }\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull)\n        gridCopy[row][col] = !gridCopy[row][col]\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    seed = () => {\n        let gridCopy = arrayClone(this.state.gridFull)\n        for(let i = 0; i < this.rows; i++) {\n            for(let j = 0; j < this.cols; j++) {\n                if(Math.floor(Math.random() * 4) === 1) {\n                    gridCopy[i][j] = true;\n                }\n            }\n        }\n        this.setState({\n            gridFull: gridCopy\n        })\n    }\n\n    playButton = () => {\n        clearInterval(this.intervalId)\n        this.intervalId = setInterval(this.play, this.speed)\n    }\n\n    pauseButton = () => {\n        clearInterval(this.intervalId)\n    }\n\n    slow = () => {\n        this.speed = 1000\n        this.playButton()\n    }\n\n    fast = () => {\n        this.speed = 100\n        this.playButton()\n    }\n\n    clear = () => {\n        var grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n        this.setState({\n            gridFul: grid,\n            generation: 0\n        })\n    }\n\n    gridSize = (size) => {\n        switch(size) {\n            case \"1\":\n                this.cols = 20\n                this.rows = 10\n            break;\n            case \"2\":\n                this.cols = 50\n                this.rows = 30\n            break;\n            default:\n                this.cols = 70\n                this.rows = 50\n        }\n        this.clear()\n    }\n\n    play = () => {\n\t\tlet g = this.state.gridFull;\n\t\tlet g2 = arrayClone(this.state.gridFull);\n\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t  for (let j = 0; j < this.cols; j++) {\n\t\t    let count = 0;\n\t\t    if (i > 0) if (g[i - 1][j]) count++;\n\t\t    if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n\t\t    if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n\t\t    if (j < this.cols - 1) if (g[i][j + 1]) count++;\n\t\t    if (j > 0) if (g[i][j - 1]) count++;\n\t\t    if (i < this.rows - 1) if (g[i + 1][j]) count++;\n\t\t    if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n\t\t    if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n\t\t    if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n\t\t    if (!g[i][j] && count === 3) g2[i][j] = true;\n\t\t  }\n\t\t}\n\t\tthis.setState({\n\t\t  gridFull: g2,\n\t\t  generation: this.state.generation + 1\n\t\t});\n\n\t}\n\n    componentDidMount() {\n        this.seed()\n        this.playButton()\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>Hayat Oyunu</h1>\n                <Buttons\n                    playButton = {this.playButton}\n                    pauseButton = {this.pauseButton}\n                    slow = {this.slow}\n                    fast = {this.fast}\n                    clear = {this.clear}\n                    seed = {this.seed}\n                    gridSize = {this.gridSize}\n                />\n                <Grid \n                    gridFull = {this.state.gridFull}\n                    rows = {this.rows}\n                    cols = {this.cols}\n                    selectBox = {this.selectBox}\n                />\n                <h2>Nesil: {this.state.generation}</h2>\n            </div>\n        )\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr))\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}